#!/bin/sh

shell_info() {
    echo "Current shell instance (you could be nested though)"
    echo $0

    echo "Other shells available"
    type sh && type bash && type dash && type csh && type ksh 

    echo "\nI think sh is symlinked to bash"
    echo "readlink -f /bin/sh"

    # -f follow every symlink
    # send output to dev/null, send errors to the same place as stdout (dev/null)
    readlink -f /bin/sh > /dev/null 2>&1 && echo "sh is symlinked" || echo "sh is not symlinked"

    echo "\nCurrent shell options (\$-)"
    echo "$-\n"

    # Check if login shell (-q quiet and returns a status code)
    shopt -q login_shell && echo 'Login shell' || echo 'Not login shell'
}

c_info() {
    echo "gcc -> clang (/usr/bin/gcc -> clang)"
    echo ""
    echo "The include paths (clang -E -v - < /dev/null)"
    echo "/dev/null is stdinput for clang -E -v"

    # -E stop after preprocessing
    # -v verbose
    # - stdinput (dev/null in this case)
    clang -E -v - < /dev/null # find include paths

    # xcode run
    xcrun --show-sdk-path # find the sdk paths
}

java_info() {
    echo "This shows where the java_home is (I think?)"
    /usr/libexec/java_home -V
}

print_and_exit() {
    echo ""
    exit 0
}

while true; do
    echo "This script helps me figure out stuff about my macOS system." 
    echo "Press the following number for help \n" 

    echo "1. shell info"
    echo "2. C info"
    echo "3. Java info"
    echo "4. Print this script"
    echo "5. Exit"

    read -r choice
    case $choice in
    1) shell_info ;;
    2) c_info ;;
    2) java_info ;;
    3) ./show_script $0 ;;
    4) print_and_exit ;;
    5) exit 0 ;;
    *) echo "Invalid choice. Try again." ;;
    esac
done
